---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";

const posts = (await Astro.glob("./blog/*.{md,mdx}")).sort(
  (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const last_posts = posts.slice(0, 1);
---

<BaseLayout>

    <div class="pb-12 mt-5">
      <div class="text-xl py-1">Hola üëã</div>
      <div class="text-5xl font-bold">Soy Rafael Planas</div>
      <div class="text-3xl py-3 font-bold">Desarrollador Web</div>
      <div class="py-2">
        <text class="text-lg">
          Desarrollador Web Frontend especializado en ReactJS con 2 a√±os de experiencia. Domino el uso
de hooks en React, creaci√≥n de hooks personalizados, he trabajado con React Router, React
Query, Redux. Tengo un amplio conocimiento de NextJS, he utilizado sus hooks, enrutamiento de
p√°ginas y componentes del mismo.
          </text
        >
      </div>
      <div class="mt-8">
        <a class="btn" href="mailto:betancourtrafael00@gmail.com" target="_blank"> Contactar</a>
        <a href="/cv" class="btn btn-outline ml-5"> Conocer m√°s</a>
      </div>
    </div>

    <div>
      <div class="text-3xl w-full font-bold mb-2">Algunos Proyectos{"</>"}</div>
    </div>
    <HorizontalCard
    title="Ecommerce & Dashboard"
    img="/post_img_bitnautas.webp"
    desc={`‚Ä¢ Dise√±√© y desarroll√© una plataforma escalable, capaz de gestionar cientos de e-commerce con alta concurrencia y disponibilidad. ‚Ä¢ Implement√© un backend robusto utilizando Node.js con Supabase como capa de persistencia, optimizando consultas y la escalabilidad de la base de datos. 
    <br/>‚Ä¢ Desarroll√© el frontend utilizando React.js junto a Vite para mejorar el tiempo de carga y compilaci√≥n
    <br/>‚Ä¢ Se us√≥ React Router para la gesti√≥n eficiente de rutas, React Hook Form para formularios controlados, y Chakra UI para una interfaz accesible y responsive. Redux fue integrado para el manejo centralizado del estado global. 
    <br/>‚Ä¢ Apliqu√© la arquitectura MVC (Modelo-Vista-Controlador) en el backend, promoviendo una separaci√≥n clara de responsabilidades y facilitando el mantenimiento y escalabilidad del c√≥digo`}
  url="https://frontend-db.vercel.app/test_shop"
  />
  <HorizontalCard
  title="XchangeX (Conversor de Monedas) "
  img="/post_img_bitnautas.webp"
  desc={`‚Ä¢ Implement√© el consumo de APIs REST para obtener y
  calcular los precios de distintas monedas.
  <br/>‚Ä¢ Utilic√© las API Routes de Next.js para crear una API,
  permitiendo un manejo eficiente de las solicitudes y
  respuestas.
  <br/>‚Ä¢ Desarroll√© un hook personalizado que facilita el consumo
  de las APIs creadas.
  <br/>‚Ä¢ Implement√© Server-Side Rendering (SSR) para optimizar la
  velocidad de carga y el rendimiento general de la web.`}
  url="https://xchangex-app.vercel.app/"
  />
    <div class="flex justify-end mt-4">
      <a href="/projects" class="btn btn-outline ml-5"> Ver m√°s</a>
    </div>
  <div class="divider my-0"></div>

    {
      /*last_posts.map((post) => (
        <HorizontalCard
          title={post.frontmatter.title}
          img={post.frontmatter.heroImage}
          desc={post.frontmatter.description}
          url={post.url}
          target="_self"
        />
        <div class="divider my-0"></div>
      ))*/
    }

</BaseLayout>
